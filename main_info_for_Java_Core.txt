                                        Основні розділи Java Core

    1. Основи Java
Синтаксис та структура програми: Основи створення Java-програм, правила іменування, коментарі.
Типи даних: Примітивні типи (int, boolean, char тощо) та об'єктні типи.
Оператори: Арифметичні, логічні, порівняння, присвоєння тощо.
Керування потоком: Умовні оператори (if, switch) та цикли (for, while, do-while).

    2. Об'єктно-орієнтоване програмування (ООП)
Класи та об'єкти: Створення та використання класів та об'єктів.
Інкапсуляція: Модифікатори доступу (private, public, protected).
Наслідування: Використання ключового слова extends для створення ієрархії класів.
Поліморфізм: Метод overloading та overriding, інтерфейси.
Абстракція: Абстрактні класи та методи.

    3. Колекції
Java Collections Framework: Списки (ArrayList, LinkedList), множини (HashSet, TreeSet), мапи (HashMap, TreeMap), черги (Queue).
Ітератори: Використання Iterator та ListIterator.
Статичні методи з класу Collections: Наприклад, Collections.sort(), Collections.reverse().

    4. Виключення та обробка помилок
Обробка виключень: try, catch, finally.
Види виключень: Checked та unchecked виключення.
Створення власних виключень.

    5. Вхід/вихід (I/O)
Потоки вводу/виводу: InputStream, OutputStream, Reader, Writer.
Робота з файлами: Класи File, BufferedReader, BufferedWriter.
Серіалізація об'єктів.

6. Багатопоточність
Потоки (Threads): Створення та управління потоками.
Синхронізація: Використання ключового слова synchronized.
Класи з пакету java.util.concurrent: ExecutorService, Future, Callable.

    7. Java API та утиліти
String та StringBuilder/StringBuffer: Робота з рядками.
Wrapper-класи: Автоупакування (autoboxing) та розпакування (unboxing).
Utility-класи: Math, Arrays, Objects, Collections.

    8. Java 8 та новіші можливості
Лямбда-вирази: Функціональне програмування в Java.
Потоки (Streams API): Обробка колекцій даних у функціональному стилі.
Optional: Робота з можливістю відсутності значення.

    9. Робота з мережею
Сокети: Основи мережевого програмування.
HTTP-запити: Використання класів для роботи з HTTP.
10. Бібліотеки та інструменти
Maven/Gradle: Інструменти для автоматизації збірки проєктів.
JUnit: Написання та виконання тестів.